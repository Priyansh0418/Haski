# ============================================================================
# Haski ML Pipeline - Requirements
# ============================================================================
# Core ML Framework Dependencies
# Install with: pip install -r ml/requirements.txt
#
# For GPU support (CUDA 11.8):
#   pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118
#
# For GPU support (CUDA 12.1):
#   pip install torch torchvision --index-url https://download.pytorch.org/whl/cu121
#
# For CPU only:
#   pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
#
# For Apple Metal (MPS):
#   pip install torch torchvision
# ============================================================================

# ============================================================================
# CORE DEEP LEARNING FRAMEWORK
# ============================================================================

# PyTorch - Deep learning framework
# Install separately with GPU support via index-url above
torch>=2.0,<3.0
torchvision>=0.15.0,<1.0

# PyTorch Lightning - Optional but recommended for advanced training
# Simplifies training loops, multi-GPU support, checkpointing
pytorch-lightning>=2.0,<3.0

# ============================================================================
# MODEL EXPORT & INFERENCE
# ============================================================================

# ONNX - Open Neural Network Exchange format for cross-platform inference
onnx>=1.14.0,<2.0
onnxruntime>=1.16.0,<2.0

# TensorFlow & TFLite - For mobile model conversion and inference
# Note: Uncomment tensorflow for full TensorFlow support (heavy)
# tensorflow>=2.13,<3.0

# Lightweight TFLite runtime for mobile inference (recommended for mobile)
tflite-runtime>=2.13.0; platform_system == "Linux" or platform_system == "Darwin"

# ============================================================================
# OBJECT DETECTION & YOLO
# ============================================================================

# Ultralytics YOLOv8 - Object detection and segmentation
ultralytics>=8.0,<9.0

# ============================================================================
# IMAGE PROCESSING & COMPUTER VISION
# ============================================================================

# Pillow - Image processing (required by torchvision)
Pillow>=10.0,<11.0

# OpenCV - Computer vision library
opencv-python>=4.8.0,<5.0

# ============================================================================
# DATA PROCESSING & ANALYSIS
# ============================================================================

# NumPy - Numerical computing
numpy>=1.24,<2.0

# Pandas - Data manipulation and analysis
pandas>=2.0,<3.0

# Matplotlib - Visualization and plotting
matplotlib>=3.8,<4.0

# SciPy - Scientific computing
scipy>=1.11,<2.0

# Scikit-learn - ML utilities (metrics, preprocessing)
scikit-learn>=1.3,<2.0

# ============================================================================
# TESTING & DEVELOPMENT
# ============================================================================

# Pytest - Testing framework
pytest>=7.4,<8.0

# Pytest-cov - Coverage reporting for tests
pytest-cov>=4.1,<5.0

# Black - Code formatter
black>=23.9,<24.0

# Pylint - Code quality checker
pylint>=2.17,<3.0

# Flake8 - Style guide enforcement
flake8>=6.0,<7.0

# ============================================================================
# UTILITIES & HELPERS
# ============================================================================

# tqdm - Progress bars
tqdm>=4.66,<5.0

# PyYAML - YAML parsing (needed by ultralytics)
PyYAML>=6.0,<7.0

# Requests - HTTP library
requests>=2.31,<3.0

# ============================================================================
# OPTIONAL - Jupyter & Notebook Support
# ============================================================================

# Jupyter - Interactive notebooks
jupyter>=1.0,<2.0
jupyterlab>=4.0,<5.0
ipython>=8.16,<9.0

# ============================================================================
# OPTIONAL - Advanced Training Tools
# ============================================================================

# Weights & Biases - Experiment tracking (optional)
# wandb>=0.15,<1.0

# MLflow - ML lifecycle management (optional)
# mlflow>=2.7,<3.0

# Tensorboard - TensorFlow visualization (works with PyTorch too)
# tensorboard>=2.14,<3.0

# ============================================================================
# OPTIONAL - Data Augmentation
# ============================================================================

# Albumentations - Advanced image augmentation
# albumentations>=1.3,<2.0

# Augly - FB's augmentation library (optional)
# augly>=0.2,<1.0

# ============================================================================
# OPTIONAL - Model Optimization
# ============================================================================

# ONNX Runtime extensions for acceleration
# onnxruntime-gpu>=1.16.0,<2.0  # GPU-accelerated ONNX

# TensorRT - NVIDIA model inference optimization
# tensorrt>=8.6,<9.0

# ============================================================================
# Notes:
# ============================================================================
#
# 1. PyTorch Installation:
#    - Default: pip install -r ml/requirements.txt (CPU mode)
#    - GPU (CUDA 11.8): pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118 && pip install -r ml/requirements.txt --no-deps
#    - GPU (CUDA 12.1): pip install torch torchvision --index-url https://download.pytorch.org/whl/cu121 && pip install -r ml/requirements.txt --no-deps
#
# 2. TFLite Runtime:
#    - Lightweight alternative to full TensorFlow (30 MB vs 500+ MB)
#    - Only available on Linux/macOS; Windows uses full TensorFlow
#
# 3. ONNX Runtime:
#    - Works on CPU by default
#    - For GPU: pip install onnxruntime-gpu (requires CUDA setup)
#
# 4. Optional packages:
#    - Uncomment in this file or install separately as needed
#    - jupyter: For notebook-based training
#    - pytorch-lightning: For advanced training features
#    - wandb/mlflow: For experiment tracking
#
# 5. Version Pinning:
#    - Compatible versions specified for Python 3.9+
#    - Tested with PyTorch 2.0+
#
# ============================================================================
